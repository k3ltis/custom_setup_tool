---
#########################
# Homebrew installation
#########################
- name: Install Homebrew
  shell: /bin/bash -c "NONINTERACTIVE=1 $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
- name: Add Homebrew to terminal
  shell: |
    echo '# Set PATH, MANPATH, etc., for Homebrew.' >> {{ shell_config_path }}
    echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> {{ shell_config_path }}
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

#########################
# Homebrew formulas
#########################
- name: Install homebrew formulas
  ignore_errors: "{{ ansible_check_mode }}"
  block:
  - name: Install fzf
    community.general.homebrew:
      name: fzf
      state: present
  - name: Install tldr
    community.general.homebrew:
      name: tldr
      state: present
  - name: Install stow
    community.general.homebrew:
      name: stow
  ### <tmux>
  - name: Install tmux
    community.general.homebrew:
      name: tmux
      state: present
  - name: Install tmux plugin manager
    ansible.builtin.git:
      repo: 'https://github.com/tmux-plugins/tpm'
      dest: '$HOME/.tmux/plugins/tpm'
      version: "{{ tmux_plugin_manager_version }}"
      force: true
      update: true
  - name: Set tmux config
    ansible.builtin.copy:
      src: "{{ tmux_config_template }}"
      dest: "{{ tmux_config_destination }}"
      force: false
  ### </tmux>
  ### <autoenv>
  # - name: Install autoenv
  #   community.general.homebrew:
  #     name: autoenv
  #     state: present
  # - name: Add autoenv to shell setup
  #   shell: echo 'source $(brew --prefix autoenv)/activate.sh >> ${ZDOTDIR:-$HOME}/.zprofile'
  ### </autoenv>
  - name: Install the_silver_searcher (ag command)
    community.general.homebrew:
      name: the_silver_searcher
      state: present
  - name: Install glances (system information viewer)
    community.general.homebrew:
      name: glances
      state: present
  - name: Install yq (yaml processor)
    community.general.homebrew:
      name: yq
      state: present
  - name: Install fx (Json viewer)
    community.general.homebrew:
      name: fx
      state: present  
  - name: Install coreutils
    community.general.homebrew:
      name: coreutils
      state: present  
  - name: Install tree
    community.general.homebrew:
      name: tree
      state: present
  - name: Install fd (find alternative)
    community.general.homebrew:
      name: fd
      state: present
  - name: Install dive (docker layer inspection tool)
    community.general.homebrew:
      name: dive
      state: present
  - name: Install k9s
    community.general.homebrew:
      name: k9s
      state: present
  ### <lazydocker>
  - name: Install lazydocker
    community.general.homebrew:
      name: lazydocker
      state: present
  - name: Create lazydocker config directory
    ansible.builtin.file:
      path: "{{ lazydocker_config_dir }}"
      state: directory
  - name: Set lazydocker config
    ansible.builtin.copy:
      src: "{{ lazydocker_config_template }}"
      dest: "{{ lazydocker_config_file_path }}"
      force: false
  ### </lazydocker>
  - name: Install ctop (container top)
    community.general.homebrew:
      name: ctop
      state: present
  # - name: Install ncdu (disk usage investigation tool)
  #   community.general.homebrew:
  #     name: ctop
  #     state: present
  ### <nvim>
  - name: Install nvim (neovim)
    community.general.homebrew:
      name: neovim
      state: present
  - name: Create nvim config directory
    ansible.builtin.file:
      path: "{{ nvim_config_dir }}"
      state: directory
  - name: Set nvim config
    ansible.builtin.copy:
      src: "{{ nvim_config_file_template }}"
      dest: "{{ nvim_config_file_path }}"
      force: false
  ### </nvim>
  # - name: Install imagemagick 
  #   community.general.homebrew:
  #     name: imagemagick
  #     install_options: with-webp  
  #     state: present  